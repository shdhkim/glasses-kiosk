name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Add execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Find JAR file
        id: find-jar
        run: |
          JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          echo "JAR file found: $JAR_FILE"
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          KEY: ${{ secrets.DEPLOY_KEY }}
          JAR_FILE: ${{ env.JAR_FILE }}
        run: |
          # EC2의 호스트 키를 등록
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          
          # SSH 키 파일 생성
          echo "$KEY" > deploy_key.pem
          chmod 400 deploy_key.pem
          
          # 애플리케이션 JAR 파일 업로드 (서버에서 이름 변경)
          scp -i deploy_key.pem $JAR_FILE $USER@$HOST:/home/ec2-user/app.jar
          
          # EC2 서버에서 애플리케이션 실행
          ssh -i deploy_key.pem $USER@$HOST <<EOF
            pkill -f app.jar || true
            nohup java -jar /home/ec2-user/app.jar > /home/ec2-user/app.log 2>&1 &
          EOF